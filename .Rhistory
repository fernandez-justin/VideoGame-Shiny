mutate(month = month(month),day = day(day))
nflightsEWR %>%
mutate(month = month(month),day = day(day), origin=01.01.2013)
nflightsEWR %>%
mutate(month = month(month),day = day(day), origin='01.01.2013')
nflightsEWR %>%
mutate(month = month(month),day = day(day))
mutate((month = month(month),day = day(day), origin = '1970-01-01')
stuff <- nflightsEWR %>%
stuff <- nflightsEWR %>%
stuff <- nflightsEWR %>%
mutate(month = month(month),day = day(day), origin = '1970-01-01')
stuff <- nflightsEWR %>%
mutate(month = month(month) day = day(day), origin = '1970-01-01')
stuff <- nflightsEWR %>%
mutate((month = month(month),day = day(day)), origin = '1970-01-01')
stuff <- nflightsEWR %>%
mutate(month = month(month),day = day(day), origin = '1970-01-01')
stuff <- nflightsEWR %>%
mutate(1,as.Date(month = month(month),day = day(day), origin = '1970-01-01'))
view(a3_ttc_subway_delay)
View(a3_ttc_subway_delay)
View(a3_ttc_subway_delay.rdata)
library(rmarkdown)
library(tidyverse)
library(tidyverse)
library(ggplot2)
a3_ttc_subway_delay <- read.table("~/Documents/SCHOOL/DataScience/a3/a3_ttc_subway_delay.rdata", quote="\"", stringsAsFactors=FALSE)
View(a3_ttc_subway_delay)
head(data)
load("/Users/Justin/Documents/SCHOOL/DataScience/a3/data.rdata")
load("/Users/Justin/Documents/SCHOOL/DataScience/a3/data.rdata")
View(data.rdata)
View(data)
View(data)
library(ggplot2)
load("C://Users/Justin/Documents/SCHOOL/DataScience/a3/data.rdata",'data.r3')
load("C://Users/Justin/Documents/SCHOOL/DataScience/a3/data.rdata",'data.s3')
head(data.s3)
load("C://Users/Justin/Documents/SCHOOL/DataScience/a3/data.RData",'data.s3')
load("C://Users/Justin/Documents/SCHOOL/DataScience/a3/data.rdata",'data.s3')
load("C://Users/Justin/Documents/SCHOOL/DataScience/a3/data.rdata")
load("C://Users/Justin/Documents/SCHOOL/DataScience/a3/data.rdata")
load("C://Users/Justin/Documents/SCHOOL/DataScience/a3/data.rdata")
load("C://Users/Justin/Documents/SCHOOL/DataScience/a3/data.rdata")
#head(data)
#head(data)
#head(data)
load("C://Users/Justin/Documents/SCHOOL/DataScience/a3/data.rdata")
load("C://Users/Justin/Documents/SCHOOL/DataScience/a3/data.rdata")
vgsales <- read.csv("~/Documents/SCHOOL/DataScience/proj/vgsales.csv")
View(vgsales)
shiny::runApp('Documents/SCHOOL/DataScience/proj')
runApp('Documents/SCHOOL/DataScience/proj')
runApp('Documents/SCHOOL/DataScience/proj')
View(vgsales)
View(vgsales)
View(vgsales)
runApp('Documents/SCHOOL/DataScience/proj')
View(a3_ttc_subway_delay)
clear
library(lubridate)
library(tidyverse)
library(shiny)
vgsales <- read.csv("~/Documents/SCHOOL/DataScience/vgsales.csv")
View(vgsales)
#best selling game by genre
genre_test <- vgsales %>%
filter(Genre == 'Sports') %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Name = paste(Name,' (',Year,')', sep = '')) %>%
select(Name, Total_Sales)
View(genre_test)
View(genre_test)
ggplot(genre_test, aes(x = reorder(Name, -Total_Sales), y = Total_Sales, fill = 'red'))+
geom_bar(stat='identity')
gernre_test <-head(genre_test, n = 8)
#best selling game by genre
genre_test <- vgsales %>%
filter(Genre == 'Sports') %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Name = paste(Name,' (',Year,')', sep = '')) %>%
select(Name, Total_Sales)
gernre_test <-head(genre_test, n = 8)
ggplot(genre_test, aes(x = reorder(Name, -Total_Sales), y = Total_Sales, fill = 'red'))+
geom_bar(stat='identity')
gernre_test <-head(genre_test, n = 8)
View(gernre_test)
View(gernre_test)
ggplot(genre_test, aes(x = reorder(Name, -Total_Sales), y = Total_Sales, fill = 'red'))+
geom_bar(stat='identity')
#best selling game by genre
genre_test <- vgsales %>%
filter(Genre == 'Sports') %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Name = paste(Name,' (',Year,')', sep = '')) %>%
select(Name, Total_Sales)
gernre_test <-head(genre_test, n = 8)
genre_test <-head(genre_test, n = 8)
ggplot(genre_test, aes(x = reorder(Name, -Total_Sales), y = Total_Sales, fill = 'red'))+
geom_bar(stat='identity')
ggplot(genre_test, aes(x = reorder(Name, -Total_Sales), y = Total_Sales, fill = 'density'))+
geom_bar(stat='identity')
genre_test <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Year, Total_Sales)
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Year, Total_Sales)
ggplot(year_sales, aes(x = year, y = Total_Sales))+
geom_smooth()
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Year, Total_Sales)
ggplot(year_sales, aes(x = Year, y = Total_Sales))+
geom_smooth()
ggplot(year_sales, aes(x = Year, y = Total_Sales))+
geom_smooth()+
scale_x_continuous(Year, limits=c(1980,2020))
ggplot(year_sales, aes(x = Year, y = Total_Sales))+
geom_smooth()+
scale_x_continuous('Year', limits=c(1980,2020))
ggplot(year_sales, aes(x = Year, y = Total_Sales))+
geom_smooth()+
scale_x_continuous('Year', limits=c(1980, 2020))
ggplot(year_sales, aes(x = Year, y = Total_Sales))+
geom_smooth()+
scale_x_continuous('Year', breaks=seq(1980,2020,10))
ggplot(year_sales, aes(x = Year, y = Total_Sales))+
geom_smooth()+
scale_x_continuous(breaks=seq(1980,2020,10))
ggplot(year_sales, aes(x = Year, y = Total_Sales))+
geom_smooth()+
scale_x_continuous(breaks=seq(1980,2020,10))
ggplot(year_sales, aes(x = Year, y = Total_Sales))+
geom_smooth()
ggplot(year_sales, aes(x = Year, y = Total_Sales))+
geom_point()+
scale_x_continuous(breaks=c(1980,1990, 2000, 2010))
ggplot(year_sales, aes(x = Year, y = Total_Sales))+
geom_point()
ggplot(year_sales, aes(x = Year, y = Total_Sales))+
geom_point() +
theme(axis.text.x = element_text(angle = 90))
ggplot(year_sales, aes(x = Year, y = Total_Sales))+
geom_line() +
theme(axis.text.x = element_text(angle = 90))
ggplot(year_sales, aes(x = Year, y = Total_Sales))+
geom_curve() +
theme(axis.text.x = element_text(angle = 90))
ggplot(year_sales, aes(x = Year, y = Total_Sales))+
geom_point() +
theme(axis.text.x = element_text(angle = 90))
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Year, Total_Sales)
View(year_sales)
View(year_sales)
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Year, Total_Sales) %>%
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = sum)
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Year, Total_Sales) %>%
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = sum)
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Year, Total_Sales)
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = sum)
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = 'sum')
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Year, Total_Sales)
year_sales <- aggregate(year_sales, by = list(Year), FUN = 'sum')
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = 'mean')
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = 'mean',na.action = na.omit)
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Year, Total_Sales) %>%
filter(as.numeric(Year))
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = 'mean')
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Year, Total_Sales) %>%
filter(as.numeric(Year))
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Year, Total_Sales) %>%
filter(is.numeric(Year))
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Year, Total_Sales) #filter(is.numeric(Year))
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = 'mean')
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Year, Total_Sales) %>%
filter(Year != 'N/A')
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = 'mean')
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = 'sum')
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Year, Total_Sales) %>%
filter(Year != 'N/A')
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = 'sum')
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
filter(Year != 'N/A')
runApp('Documents/SCHOOL/DataScience/proj/app_new.R')
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Year = as.numeric(Year)) %>%
filter(Year != 'N/A')
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Year = as.Date(Year)) %>%
filter(Year != 'N/A')
year_sales <- vgsales %>%
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Year = as.Date(Year, '%y'))
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Year_fix = as.Date(Year, '%y'))
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Year_fix = as.Date(Year, '%Y'))
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Year_fix = as.Date(as.numeric(Year), '%Y'))
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Year_fix = as.Date(Year, '%Y'))
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Year_fix = year(as.Date(Year, '%Y')))
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Year = year(as.Date(Year, '%Y')))
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = 'sum')
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = 'mean')
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Year = year(as.Date(Year, '%Y'))) %>%
filter(is.numeric(Total_Sales))
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = 'mean')
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Year = year(as.Date(Year, '%Y'))) %>%
filter(is.numeric(Total_Sales))
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = 'sum')
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Year = year(as.Date(Year, '%Y'))) %>%
filter(is.numeric(Total_Sales))
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = sum)
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Year = year(as.Date(Year, '%Y'))) %>%
filter(is.numeric(Total_Sales)) %>%
select(Year, Total_Sales)
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = sum)
ggplot(year_sales, aes(x = Year, y = Total_Sales))+
geom_point() +
theme(axis.text.x = element_text(angle = 90))
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Year = year(as.Date(Year, '%Y'))) %>%
filter(is.numeric(Total_Sales)) %>%
select(Year, Total_Sales)
year_sales <- aggregate(year_sales, by = list(year_sales$Year), FUN = sum)
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Year_fix = year(as.Date(Year, '%Y'))) %>%
filter(is.numeric(Total_Sales)) %>%
select(Year_fix, Total_Sales)
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Year_fix = year(as.Date(Year, '%Y'))) %>%
filter(is.numeric(Total_Sales)) %>%
select(Year_fix, Total_Sales)
year_sales <- aggregate(year_sales, by = list(year_sales$Year_fix), FUN = sum)
ggplot(year_sales, aes(x = Year_fix, y = Total_Sales))+
geom_point() +
theme(axis.text.x = element_text(angle = 90))
year_sales <- vgsales %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
mutate(Year_fix = year(as.Date(Year, '%Y'))) %>%
filter(is.numeric(Total_Sales)) %>%
select(Year_fix, Total_Sales)
year_sales <- aggregate(year_sales, by = list(year_sales$Year_fix), FUN = sum)
ggplot(year_sales, aes(x = Group.1, y = Total_Sales))+
geom_point() +
theme(axis.text.x = element_text(angle = 90))
ggplot(year_sales, aes(x = Group.1, y = Total_Sales))+
geom_point() +
theme(axis.text.x = element_text(angle = 45))
ggplot(year_sales, aes(x = Group.1, y = Total_Sales))+
geom_smooth() +
theme(axis.text.x = element_text(angle = 45))
ggplot(year_sales, aes(x = Group.1, y = Total_Sales))+
geom_point() +
theme(axis.text.x = element_text(angle = 45))
ggplot(year_sales, aes(x = Group.1, y = Total_Sales))+
geom_line() +
theme(axis.text.x = element_text(angle = 45))
runApp('Documents/SCHOOL/DataScience/proj/app_new.R')
runApp('Documents/SCHOOL/DataScience/proj/app_new.R')
ggplot(year_test, aes(x= reorder(Name,Total_Sales),y=Total_Sales, fill = Name))+
geom_bar(stat='identity')+
geom_text(aes(label = Total_Sales), size = 3, hjust = 1.2, vjust = 0.2, position ="stack")+
coord_flip() +
theme(legend.position = "none") +
xlab('Name')+
ylab('Number of Copies Sold (millions)') +
theme_bw()
year_test <- vgsales %>%
filter(as.numeric(Year) >= input$slider2[1]) %>%
filter(as.numeric(Year) <= input$slider2[2]) %>%
mutate(Name = paste(Name,' (',Platform,')', sep = '')) %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Name, Year,Total_Sales)
year_test <- vgsales %>%
filter(as.numeric(Year) >= 2000) %>%
filter(as.numeric(Year) <= 2010) %>%
mutate(Name = paste(Name,' (',Platform,')', sep = '')) %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Name, Year,Total_Sales)
year_test = head(year_test, n = 10)
year_test = year_test[order(year_test$Total_Sales, decreasing = TRUE),]
ggplot(year_test, aes(x= reorder(Name,Total_Sales),y=Total_Sales, fill = Name))+
geom_bar(stat='identity')+
geom_text(aes(label = Total_Sales), size = 3, hjust = 1.2, vjust = 0.2, position ="stack")+
coord_flip() +
theme(legend.position = "none") +
xlab('Name')+
ylab('Number of Copies Sold (millions)') +
theme_bw()
View(year_test)
year_test <- vgsales %>%
filter(as.numeric(Year) >= 2000) %>%
filter(as.numeric(Year) <= 2010) %>%
mutate(Name = paste(Name,' (',Platform,')', sep = '')) %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Name, Year,Total_Sales)
year_test <- vgsales %>%
filter(as.numeric(Year) >= 2000) %>%
filter(as.numeric(Year) <= 2010) %>%
mutate(Name = paste(Name,' (',Platform,')', sep = '')) %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Name, Year ,Total_Sales)
year_test <- vgsales %>%
filter(as.numeric(Year) >= 2000) %>%
filter(as.numeric(Year) <= 2010) %>%
mutate(Name = paste(Name,' (',Platform,')', sep = '')) %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales)
year_test <- vgsales %>%
filter(as.numeric(Year) >= 2000) %>%
filter(as.numeric(Year) <= 2010)
year_test <- vgsales %>%
filter(as.numeric(Year) >= 2000) %>%
filter(as.numeric(Year) <= 2010)
year_test <- vgsales %>%
filter(as.numeric(Year) >= 2000) %>%
filter(as.numeric(Year) <= 2010)
View(year_test)
year_test <- vgsales %>%
filter(as.numeric(Year) >= 2000)
View(year_test)
View(year_test)
year_test <- vgsales %>%
filter(as.numeric(Year) >= '2000')
year_test <- vgsales %>%
filter(as.numeric(Year) >= '2000') %>%
filter(as.numeric(Year) <= '2010') %>%
mutate(Name = paste(Name,' (',Platform,')', sep = '')) %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales)%>%
select(Name, Year ,Total_Sales)
year_test = head(year_test, n = 10)
year_test = year_test[order(year_test$Total_Sales, decreasing = TRUE),]
ggplot(year_test, aes(x= reorder(Name,Total_Sales),y=Total_Sales, fill = Name))+
geom_bar(stat='identity')+
geom_text(aes(label = Total_Sales), size = 3, hjust = 1.2, vjust = 0.2, position ="stack")+
coord_flip() +
theme(legend.position = "none") +
xlab('Name')+
ylab('Number of Copies Sold (millions)') +
theme_bw()
year_test <- vgsales %>%
filter(as.numeric(Year) >= '2000') %>%
filter(as.numeric(Year) <= '2010') %>%
mutate(Name = paste(Name,' (',Platform,')', sep = '')) %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales)%>%
select(Name, Year ,Total_Sales)
year_test <- vgsales %>%
filter(as.numeric(Year) >= '2000') %>%
filter(as.numeric(Year) <= '2010')
year_test <- vgsales %>%
filter(as.numeric(Year) >= '2000') %>%
filter(as.numeric(Year) <= '2010')
year_test <- vgsales %>%
filter(as.numeric(Year) >= 2000) %>%
filter(as.numeric(Year) <= 2010)
View(year_test)
year_test <- vgsales
year_test <- vgsales%>%
filter(as.numeric(Year) >= 2000)
year_test <- vgsales%>%
filter(as.numeric(Year) >= '2000')
View(year_test)
year_test <- vgsales%>%
filter(as.numeric(Year) >= 2000)
runApp('Documents/SCHOOL/DataScience/proj/app_new.R')
runApp('Documents/SCHOOL/DataScience/proj/app_new.R')
as.numeric(Year)
year_test <- vgsales%>%
filter(as.numeric(Year) > 2000)
filter(as.numeric(Year) < 2010)
View(vgsales)
options(stringsAsFactors=FALSE)
library(lubridate)
library(tidyverse)
library(shiny)
read_csv('/Users/Justin/Documents/SCHOOL/DataScience/proj/vgsales.csv')
ui <- navbarPage("Video Games",
tabPanel("How Well Did It Sell?",
helpText('Pick any game that you can think of and see how well it sold on each console on differnt regions'),
sidebarPanel(
selectizeInput('games',label = h3('Choose Game'),choices = NULL)
),
mainPanel(
plotOutput(outputId="salesPlot")
)
),
tabPanel("What Year was Top Tier",
helpText('Pick a range of years to see what games were the best selling of the time period'),
sidebarPanel(
sliderInput("slider2", label = h3("Choose Year Range"), min = 1980, max = 2020, value = c(1980, 2020)),
),
mainPanel(
plotOutput(outputId="yearPlot")
)
),
tabPanel("")
)
server <- function(input, output, session) {
updateSelectizeInput(session, 'games', choices = vgsales$Name, server = TRUE)
output$range <- renderPrint({ input$slider2 })
output$salesPlot <- renderPlot({
game_info <- vgsales%>%
filter(Name == input$games)%>%
gather(Location, Sales, NA_Sales:Global_Sales)
ggplot(game_info, aes(x = reorder(Location, -Sales), y = Sales, fill= Location)) +
scale_x_discrete(labels=c("NA_Sales" = "NA","EU_Sales" = "EU","JP_Sales" = "JP","Other_Sales" = "Other","Global_Sales" = "Global"))+
facet_wrap(~ Platform)+
geom_bar(stat='identity') +
geom_text(aes(label = Sales), size = 3, hjust = 0.5, vjust = 2, position ="stack")+
xlab('Region')+
ylab('Number of Copies Sold (millions)')+
theme_bw()
})
output$yearPlot <- renderPlot({
year_test <- vgsales %>%
filter(as.numeric(Year) >= input$slider2[1]) %>%
filter(as.numeric(Year) <= input$slider2[2]) %>%
mutate(Name = paste(Name,' (',Platform,')', sep = '')) %>%
mutate(Total_Sales = NA_Sales+EU_Sales+JP_Sales+Other_Sales+Global_Sales) %>%
select(Name, Year,Total_Sales)
year_test = head(year_test, n = 10)
year_test = year_test[order(year_test$Total_Sales, decreasing = TRUE),]
ggplot(year_test, aes(x= reorder(Name,Total_Sales),y=Total_Sales, fill = Name))+
geom_bar(stat='identity')+
geom_text(aes(label = Total_Sales), size = 3, hjust = 1.2, vjust = 0.2, position ="stack")+
coord_flip() +
theme(legend.position = "none") +
xlab('Name')+
ylab('Number of Copies Sold (millions)') +
theme_bw()
})
# output$flightPlot <- renderPlot({
#     req(input$angle)  # Ensure this number is available to avoid error
#
#     flightsPerDay <- flights %>%
#         filter(time_hour >= input$dateRange[1] &
#                    time_hour <= input$dateRange[2] &
#                    origin %in% input$origin) %>%
#         mutate(date=as_date(time_hour)) %>%
#         count(origin, date)
#
#     ggplot(flightsPerDay, aes(x=date, y=n, col=origin)) +
#         labs(x="", y="# of flights") +
#         geom_line() +
#         scale_x_date(date_labels="%a %b %e", date_breaks="1 day") +
#         theme_bw() +
#         theme(axis.text.x=element_text(angle=input$angle, hjust=1))
# })
}
runApp('Documents/SCHOOL/DataScience/proj/app_new.R')
options(stringsAsFactors=FALSE)
library(lubridate)
library(tidyverse)
library(shiny)
read_csv('/Users/Justin/Documents/SCHOOL/DataScience/proj/vgsales.csv')
vgsales <- read_csv('/Users/Justin/Documents/SCHOOL/DataScience/proj/vgsales.csv')
runApp('Documents/SCHOOL/DataScience/proj/app_new.R')
runApp('Documents/SCHOOL/DataScience/proj/app_new.R')
runApp('Documents/SCHOOL/DataScience/proj/app_new.R')
runApp('Documents/SCHOOL/DataScience/proj/app_new.R')
runApp('Documents/SCHOOL/DataScience/proj/app_new.R')
runApp('Documents/SCHOOL/DataScience/proj/app_new.R')
runApp('Documents/SCHOOL/DataScience/proj/app_new.R')
library(shiny); runApp('Documents/SCHOOL/DataScience/proj/app_new.R')
